<?php

 
/**
 * Add Users
 */
function sab_blog_sync_update_7002()
{
    
    try{

        db_set_active('sab_new');
        
        $results = db_select('vw_sab_user', 'c')
        ->fields('c')
        ->execute()
        ->fetchAll();
        
        db_set_active();
        

     
        
        if(count($results) > 0){
            
            foreach($results as $k => $v){


            
                
                // Create a new user
                $new_user = new stdClass();
                $new_user->name = $v->UserName;
                $new_user->pass = 'StudyAbroad!2016'; 
                $new_user->mail =  $v->Email;
                $new_user->roles =  array(DRUPAL_AUTHENTICATED_RID => 'authenticated user', 6 => 'Blogger'); // role id for custom roles varies per website
                $new_user->status = 1; 
                $new_user->is_new = TRUE;  
                
                user_save($new_user);
                
     
               
            }
        }
    
        
         drupal_set_message("Blog Users have been added."); 
    }
    
    catch(Exception $e){
        dpm($e);
        db_set_active();
       
    }

  
}

/**
 * Add Blog Contents
 */
function sab_blog_sync_update_7003()
{
    
    try{

        db_set_active('sab_new');
        
        $results = db_select('vw_sab_blog', 'c')
        ->fields('c')
        //->condition('ThreadID', 14206)
        ->execute()
        ->fetchAll();
        
      
        


        if(count($results) > 0){
            
            foreach($results as $k => $v){
      
                //$cresults =  sab_blog_comments($v-> ThreadID);
                
                db_set_active();

              

                $node = new stdclass;
                $node->type = "blogs_post";
                $node->language = LANGUAGE_NONE;
                $node->uid =$uid;
                $node->title = $v->Subject;
                $node->comment = 2;
                $node->status = 1;
                
                $node->field_article_category_tr[LANGUAGE_NONE][0]['tid'] = 7140;
                $node->field_legacy_external_id[LANGUAGE_NONE][0]['value'] = $v->ThreadID;
                $node->body[LANGUAGE_NONE][0]['format'] = 'full_html';
                $node->body[LANGUAGE_NONE][0]['value'] = $v->Body;
           
                 node_object_prepare($node);
               // node_submit($node);
                node_save($node);
                $uid = user_load_by_name($v->UserName)->uid;
                //dpm($uid);
                db_update('node')->fields(array('changed' => strtotime($v->PostDate), 'created' => strtotime($v->PostDate), 'uid' => $uid)) ->condition('nid', $node->nid)->execute();
               
                                    
                //dpm($v->UserName);
     
                //dpm($uid);
                //dpm($v->Subject);

                //if (count($cresults) > 0)
                //{
                 
                //   foreach($cresults as $d => $c){
                //    $comment = new stdClass();
                //    $comment->nid = $node->nid; // 
                //    $comment->cid = 0; // leave it as is
                //    $comment->pid = 0; // parent comment id, 0 if none 
                //    $comment->uid = user_load_by_name($c->UserName) ->uid;
                //    $comment->mail = $c->UserName;
                //    $comment->name = $c->Email;
                //    $comment->thread = '01/'; // OPTIONAL. If you need comments to be threaded you can fill this value. Otherwise omit it.
                  
                //    $comment->is_anonymous = 0; // leave it as is
                  
                //    $comment->status = COMMENT_PUBLISHED; // We auto-publish this comment
                //    $comment->language = LANGUAGE_NONE; // The same as for a node
                //    $comment->subject = $c->Subject;
                //    $comment->comment_body[$comment->language][0]['value'] =  $v->Body;
                //    $comment->comment_body[$comment->language][0]['format'] =  'full_html';; 
                    

                    
                 
                //    dpm($c->Subject);
                //    dpm($c->PostDate);

                //    comment_submit($comment);
                //    comment_save($comment);

                  

                //    db_update('comment')->fields(array('changed' => strtotime($c->PostDate), 'created' => strtotime($c->PostDate)))->condition('cid', $comment->cid)->execute();
                //   }
                
                //}
                
            }
        }
        drupal_set_message("blog have been added."); 
    }
    
    catch(Exception $e){
        dpm($e);
        db_set_active();
        
    }

    
}
