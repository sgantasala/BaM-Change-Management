<?php

function eddy_custom_theme_form_alter(&$form, &$form_state, $no_js_use = FALSE){

	if($form['#form_id'] == 'system_themes_admin_form'){

		$default_values = variable_get('eddy_custom_theme_subdomain_settings');

		$theme_options = array();
		foreach(list_themes() as $k => $v){
			if($v->status == 1)
				$theme_options[$k] = $v->info['name'];
		}
		
		//$form['#tree'] = TRUE;
		$form['custom_theme_subdomain'] = array(
			'#type' => 'fieldset',
			'#title' => 'Custom Theme for a Sub Domain',
			'#tree' => TRUE,
			'custom_themes_item_fieldset' => array(
				'#type' => 'fieldset',
				'#title' => 'Add the Sub Domain rule and Theme.',
				'#prefix' => '<div id="sub-domain-configuration-item-wrapper">',
				'#suffix' => '</div>',
			),
			'action_items' => array (
				'save' => array(
					'#type' => 'submit',
					'#value' => t('Save Configuration'),
					'#submit' => array('_custom_theme_subdomain_save_configuration'),
				),
				'add' => array(
					'#type' => 'submit',
					'#value' => t('Add Item'),
					'#submit' => array('_custom_theme_subdomain_add_refresh'),
					'#ajax' => array(
					  'callback' => '_custom_theme_subdomain_add_another',
					  'wrapper' => 'sub-domain-configuration-item-wrapper',
					),
				),
			)
		);
		
		if (empty($form_state['num_items'])) {
			$form_state['num_items'] = count($default_values);
		}
		for ($i = 0; $i < $form_state['num_items']; $i++) {
			
			$form['custom_theme_subdomain']['custom_themes_item_fieldset'][$i] = array(
				'#type' => 'fieldset',
				'#prefix' => '<div class="container-inline">',
				'#suffix' => '</div>',
				'sub_domain' => array(
					'#type' => 'textfield',
					'#title' => 'Sub Domain',
					'#required' => TRUE,
					'#default_value' => (!empty($default_values[$i]['sub_domain'])) ? $default_values[$i]['sub_domain'] : '',
				),
				'theme' => array(
					'#type' => 'select',
					'#title' => 'Theme',
					'#options' => $theme_options,
					'#required' => TRUE,
					'#default_value' => (!empty($default_values[$i]['theme'])) ? $default_values[$i]['theme'] : 0,
				),
			);
			
		}
		
		if ($form_state['num_items'] > 1) {
			$form['custom_theme_subdomain']['remove'] = array(
			  '#type' => 'submit',
			  '#value' => t('Remove Last Item'),
			  '#submit' => array('_custom_theme_subdomain_remove_refresh'),
			  '#ajax' => array(
				'callback' => '_custom_theme_subdomain_add_another',
				'wrapper' => 'sub-domain-configuration-item-wrapper',
			  ),
			);
		}
		
		if ($no_js_use) {
			if (!empty($form['custom_theme_subdomain']['remove']['#ajax'])) {
			  unset($form['custom_theme_subdomain']['remove']['#ajax']);
			}
			unset($form['custom_theme_subdomain']['add']['#ajax']);
		}
		
		return $form;
	
	}

}

function _custom_theme_subdomain_add_another($form, $form_state){
	return $form['custom_theme_subdomain']['custom_themes_item_fieldset'];
}

function _custom_theme_subdomain_add_refresh($form, &$form_state) {
  $form_state['num_items']++;
  $form_state['rebuild'] = TRUE;
}

function _custom_theme_subdomain_remove_refresh($form, &$form_state) {
  if ($form_state['num_items'] > 1) {
    $form_state['num_items'] --;
  }
  $form_state['rebuild'] = TRUE;
  drupal_set_message("Item was removed but not saved.", "warning");
}

function _custom_theme_subdomain_save_configuration($form, $form_state){
	variable_set('eddy_custom_theme_subdomain_settings', $form_state['values']['custom_theme_subdomain']['custom_themes_item_fieldset']);
	drupal_set_message("Your Configuration has been saved.");
}

function eddy_custom_theme_custom_theme(){

	$segments = explode('.', $_SERVER['SERVER_NAME']);

	$default_values = variable_get('eddy_custom_theme_subdomain_settings');
	
	$sub_domain = 0;
	
	if(count($segments) > 3)
		$sub_domain = 1;

	foreach($default_values as $k => $v){
		
		if($segments[$sub_domain] == $v['sub_domain']){
			return $v['theme'];
		}
	
	}

}