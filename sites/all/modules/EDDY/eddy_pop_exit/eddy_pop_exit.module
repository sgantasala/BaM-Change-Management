<?php

function eddy_pop_exit_permission() {
    return array(
      'administer exit pops' => array(
        'title' => t('Administer Exit Pop'),
        'description' => t('Administer the Exit Pop settings'),
      ),
    );
}

/**
 * Implements hook_menu().
 */
function eddy_pop_exit_menu() {

    $items['admin/structure/eddy_pop_exit'] = array(
      'title' => 'Eddy Pop Exit Admin',
      'description' => 'A Form to Configure the settings used to generate your Exit Pops',
      'page callback' => 'eddy_pop_exit_overview_page',
      'access callback' => 'user_access',
      'access arguments' => array('administer exit pops'),
      'file' => 'eddy_pop_exit_admin.inc',
      'type' => MENU_NORMAL_ITEM,
    );

    $items['admin/structure/eddy_pop_exit/add'] = array(
      'title' => 'Add Pop Up',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('eddy_pop_exit_form'),
      'access arguments' => array('administer exit pops'),
      'file' => 'eddy_pop_exit_admin.inc',
      'type' => MENU_LOCAL_ACTION,
    );

    $items['admin/structure/eddy_pop_exit/edit_container'] = array(
     'title' => 'Edit Container',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('eddy_pop_exit_edit_container_form'),
     'access arguments' => array('administer exit pops'),
     'file' => 'eddy_pop_exit_admin.inc',
     'type' => MENU_LOCAL_ACTION,
    );

    $items['admin/structure/eddy_pop_exit/manage/%/edit'] = array(
      'title' => 'Edit Form',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('eddy_pop_exit_edit_form', 'edit', 4),
      'access arguments' => array('administer exit pops'),
      'type' => MENU_NORMAL_ITEM,
      'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
      'file' => 'eddy_pop_exit_admin.inc',
    );

    $items['admin/structure/eddy_pop_exit/manage/%/delete'] = array(
      'title' => 'Delete Form',
      'page callback' => 'eddy_pop_exit_delete_form_page',
      'page arguments' => array(4),
      'access arguments' => array('administer exit pops'),
      'file' => 'eddy_pop_exit_admin.inc',
    );

    $items['admin/structure/eddy_pop_exit/set_pop_up/%/%'] = array(
      'page callback' => 'eddy_pop_exit_set_pop_up',
      'access arguments' => array('administer exit pops'),
      'type' => MENU_CALLBACK,
      'page arguments' => array(4, 5),
    );

    $items['eddy_pop_exit/campaign_details'] = array(
        'page callback' => 'eddy_pop_exit_get_campaign_details',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
     );

    $items['eddy_pop_exit/%'] = array(
        'page callback' => 'eddy_pop_exit_get_html',
        'access arguments' => array('access content'),
        'page arguments' => array(1),
        'type' => MENU_CALLBACK,
    );

    return $items;
}

/**
 * Implements hook_node_view().
 */
function eddy_pop_exit_node_view($node, $view_mode){

    if(user_is_anonymous()){

        if(node_is_page($node) && module_exists("landing_page")){

            $er_node = get_property_node($node);

            if(
                (isset($er_node->field_enable_clicks_net['und'][0]['value']) && $er_node->field_enable_clicks_net['und'][0]['value'] == 1) &&
                ($node->type != 'white_label')
            ){

                if(module_exists('eddy_lp_mobile') && !eddy_lp_is_mobile()){
                    eddy_pop_exit_add_pop_up_js();
                }

                else if(!module_exists('eddy_lp_mobile')){
                    eddy_pop_exit_add_pop_up_js();
                }

            }

        }
        else if (!module_exists("landing_page") && variable_get('eddy_core_application_id') != 2) {

            eddy_pop_exit_add_pop_up_js();

        }

    }

}

/**
 * Implements hook_eddy_forms_engine_alter().
 */
function eddy_pop_exit_eddy_forms_engine_alter($form){

    if(variable_get('eddy_core_application_id') == 2) {
        if(!module_exists("landing_page")){
            eddy_pop_exit_add_pop_up_js();
        }
    }

}

/**
 * Implements hook_page_alter().
 */
function eddy_pop_exit_page_alter(&$page){

    drupal_add_css(drupal_get_path('module', 'eddy_pop_exit') . "/css/pop_up_style.css");

    if(!path_is_admin(current_path())){

        drupal_add_js(drupal_get_path('module', 'eddy_pop_exit') . "/js/toaster.js");

        //68142 -- Clicks interstitial
        drupal_add_js(drupal_get_path('module', 'eddy_pop_exit') . "/js/interstitial.js");

        //EDDY Ad Server JS.
        if(variable_get('eddy_ad_server_domain') != null){
            drupal_add_js(variable_get('eddy_ad_server_domain') . "/Scripts/Bundles/EddyAdAggregator");
        }
    }

    if(!path_is_admin(current_path()) && user_is_anonymous()){

        drupal_add_js(drupal_get_path('module', 'eddy_pop_exit') . "/js/leave_behind.js");

        try{

            $l = db_select('eddy_pop', 'p')
                     ->fields('p')
                     ->condition('trigger_type', 'leave_behind')
                     ->condition('active', 1)
                     ->execute()->fetchObject();

            if(isset($l->id)){

                drupal_add_js(array('eddy_pop_exit_leave_behind_id' => $l->id), 'setting');

            }

            $is_active = true;

            //Rules for eLearners

            switch(variable_get('eddy_core_application_id')){

                case 2:

                    if(drupal_is_front_page()){

                        $is_active = false;

                    }
                    if(arg(0) == 'node' && is_numeric(arg(1))){

                        $node = node_load(arg(1));

                        if(node_is_page($node)){

                            $not_allowed = array(
                                'aggregator_page',
                                'product_list',
                                'school',
                                'webform',
                                'blank_slate_page'
                            );



                            if(in_array($node->type, $not_allowed)){

                                $is_active = false;

                            }

                        }

                    }else{

                        $is_active = false;

                    }

                    break;

                case 7:

                    if(drupal_is_front_page()){

                        $is_active = false;

                    }
                    if(arg(0) == 'node' && is_numeric(arg(1))){

                        $node = node_load(arg(1));

                        if(node_is_page($node)){

                            $not_allowed = array(
                                'aggregator_page',
                                'product_list',
                                'regional_product_list',
                                'campus',
                                'featured_school_landing_page',
                                'webform',
                                'blank_slate_page'
                            );



                            if(in_array($node->type, $not_allowed)){

                                $is_active = false;

                            }

                        }

                    }elseif(arg(0) != "blog" && arg(0) != "taxonomy") {

                        $is_active = false;

                    }

                    break;

            }

            drupal_add_js(array('eddy_pop_exit_leave_behind_is_active' => $is_active), 'setting');

        }
        catch(Exception $e){

            dpm($e);

        }

    }

}

/**
 * Loads the forms.
 */
function eddy_pop_exit_load($form_id) {

    $all_forms = eddy_pop_exit_load_all();

    return isset($all_forms[$form_id]) ? $all_forms[$form_id] : FALSE;
}

function eddy_pop_exit_load_all() {

    $custom_forms = &drupal_static(__FUNCTION__);

    if (!isset($custom_forms)) {
        $custom_forms = db_query('SELECT * FROM {eddy_pop}')->fetchAllAssoc('id', PDO::FETCH_ASSOC);
    }

    return $custom_forms;
}


/**
 * Loads the container forms.
 */
function eddy_pop_exit_container_load($form_id) {

    $all_forms = eddy_pop_exit_container_load_all();
    return isset($all_forms[$form_id]) ? $all_forms[$form_id] : FALSE;
}

function eddy_pop_exit_container_load_all() {

    $custom_forms = &drupal_static(__FUNCTION__);

    if (!isset($custom_forms)) {
        $custom_forms = db_query('SELECT * FROM {eddy_pop_containers}')->fetchAllAssoc('title', PDO::FETCH_ASSOC);
    }

    return $custom_forms;
}

/**
 * Adds the  JS file and sets the correct variables.
 */
function eddy_pop_exit_add_pop_up_js() {

    $result = eddy_pop_exit_db_call_active();

    if(count($result) > 0 && isset($result['type'])){

        if($result['type'] == 'iframe_add'){
            $result['full_url'] = eddy_pop_exit_get_url($result);
        }

        if($result['type'] == 'html_text'){
            $result['id_link'] =  base_path() . "eddy_pop_exit/" .  $result['id'] ;
        }

        $pop_url = url('eddy_pop_exit/campaign_details');

        drupal_add_js(array('eddy_pop_exit_url' => $pop_url), 'setting');

        drupal_add_js(array('eddy_pop_exit' => $result), 'setting');
        drupal_add_js(drupal_get_path('module', 'eddy_pop_exit') . "/js/pop_up.js");

    }

}

function eddy_pop_exit_set_pop_up($form_value_id, $trigger_type) {

    try{

        $form_values = eddy_pop_exit_load($form_value_id);
        $result = eddy_pop_exit_db_call();
        $field = array();

        foreach ($result as $form) {

            if($form['id'] == $form_value_id){
                $field['active'] = 1;
                db_update('eddy_pop')
               ->fields($field)
               ->condition('id', $form_value_id)
               ->condition('trigger_type', $trigger_type)
               ->execute();
            }
            else if($form['active'] == 1){
                $field['active'] = 0;
                db_update('eddy_pop')
               ->fields($field)
               ->condition('id', $form['id'])
               ->condition('trigger_type', $trigger_type)
               ->execute();
            }

        }

    }
    catch(Exception $e){

        dpm($e);

    }

    drupal_set_message('You have made the settings titled:  <b>' . $form_values['title'] . '</b> the active Exit Pop. </br><b>Have a Nice day &#9786</b> ');
    drupal_flush_all_caches();
    drupal_goto('admin/structure/eddy_pop_exit');

}

function eddy_pop_exit_get_url($form_values){
    $form_values['settings'] = unserialize($form_values['settings']);
    $value_sets =   $form_values['settings']['sets'];

    $url_segment = array();
    foreach ($value_sets as $url_seg){

        if ($url_seg->value == '[environment]') {

            $url_seg->value = eddy_pop_exit_get_environment();
        }

        $url_segmant[$url_seg->name] = $url_seg->value;

    }
    $url = url($form_values['url'], array('query' => $url_segmant));

    return $url;
}


function eddy_pop_exit_db_call(){
    $result = db_query("SELECT * FROM {eddy_pop} ORDER BY title", array(), array('fetch' => PDO::FETCH_ASSOC));
    return $result;
}

function eddy_pop_exit_db_call_active(){
    $result = new stdClass;
    try{
        $result = db_query('SELECT * FROM {eddy_pop} n WHERE active = 1 and trigger_type = \'exit\'')->fetchAssoc();
    }
    catch(Exception $e){
        dpm($e);
    }
    return $result;
}

// Callback Function to get Campaign Details.
function eddy_pop_exit_get_campaign_details(){

	if(!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest') {

		$qs = array_change_key_case(drupal_get_query_parameters());
        $no_results = array("GetCampaignDetailByTrackIDResult" => array("AllowExitPops" => false));

		if(!empty($qs['trackid'])){

            if(is_valid_guid($qs['trackid'])){

                $url = rtrim(variable_get("matching_service_endpoint"), '/') . '/GetCampaignDetailByTrackID';

			    $httpOptions = array(
				    'headers' => array(
					    "Content-Type" => "application/json",
					    "Accept" => "application/json; charset=utf-8",
				    ),
				    'data' => json_encode(array('TrackID' => $qs['trackid'])), //Needed for POST Method
				    'method' => 'POST'
			    );

			    $results = drupal_http_request($url, $httpOptions);

                if(!empty($results->data)){

                    drupal_json_output(json_decode($results->data));

                }else{

                    drupal_json_output($no_results);

                }

            }else{

                drupal_json_output($no_results);

            }
			exit;

		}

	}else{

        drupal_page_is_cacheable(FALSE);
        drupal_add_http_header('Status', '403 Forbidden');
		return "Access Denied";

	}

}

// Gets the subid to get Campaign Details.
function eddy_pop_exit_get_environment(){

	$set_environment = '';
	$domains = explode(".", $_SERVER['HTTP_REFERER']);


    $segments = explode(".", $_SERVER['SERVER_NAME']);
	$segments_a = $segments[count($segments)-1];

    if($segments_a == "local"){
        $set_environment .= str_replace('http://','',$domains[0]) . '_';
        $set_environment .= str_replace('https://','',$domains[0]) . '_';
    }

    if($domains[0] != '') {
        $set_environment .= $domains[1];
    }

    if(module_exists("landing_page")) {
        $set_environment .= '_lp';
    }

    else {
        $set_environment .= '_seo';
    }

	$set_environment .= '_pop_up';

	return $set_environment;

}

// Creates the html html
function eddy_pop_exit_get_html($exit_id) {

    if(is_numeric($exit_id)){

        $result = eddy_pop_exit_load($exit_id);
        $header_mark_up = '';
        $custom_css = '';
        $footer_mark_up = '';
        if(isset($result['has_container']) && $result['has_container']){
            $container_result = eddy_pop_exit_container_load('default');
            if(count($container_result)>0){
                $header_mark_up = $container_result['header_mark_up'];
                $custom_css = $container_result['custom_css'];
                $custom_head = $container_result['custom_head'];
                $footer_mark_up = $container_result['footer_mark_up'];
            }
        }

        if(!empty($result['html'])){

            $form_path = variable_get('eddy_forms_engine_service_domain');

            $module_path = base_path() . drupal_get_path('module', 'eddy_pop_exit');

            if(!empty($form_path)){

                print "<!DOCTYPE html>\n";
                print "<html>\n<head>\n";
                print "\t<script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\n";
                //print "<script>   var FormsEngine = FormsEngine || {}; </script>";
                print "\t<script type=\"text/javascript\" src=\"$form_path/Static/GetGlobal\"></script>\n";
                print "\t<script type=\"text/javascript\" src=\"$form_path/Templates/Common/js/External/GoogleDFP.js\"></script>\n";
                print "\t<script type=\"text/javascript\" src=\"$module_path/js/exit_pop_scripts.js\"></script>\n";
                if(!empty($custom_head)){
                    print $custom_head;
                }
                if(!empty($custom_css)){
                    print "\t<style>\n";
                    print $custom_css;
                    print "\t</style>\n";
                }
                print "</head>\n<body>\n";
                if(!empty($header_mark_up)){
                    print $header_mark_up;
                }
                print  "\t" . ($result['html']);
                if(!empty($footer_mark_up)){
                    print $footer_mark_up;
                }
                print "\n</body>\n</html>";
                drupal_exit();

            }else{
                drupal_set_message('A path to the Form Server needs to be defined.', 'error');
                return "";
            }

        }else{

            drupal_set_message('Please enter a valid ID.', 'error');
            return "";

        }

    }else{

        drupal_set_message('Please enter a valid ID.', 'error');
        return "";

    }

}