<?php

/**
 * Implements hook_menu().
 */
function sab_reviews_menu() {

    $items['reviews'] = array(
      'title' => 'Review Your Abroad Experience',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('sab_view_reviews'),
      'access callback' => TRUE,
    );

    return $items;

}


/**
 * Menu callback function which returns the Reviews page.
 */
function sab_view_reviews($form, &$form_state){

    if(isset($_GET['institution']) || isset($_GET['country'])){

        $resuts_count = 25;

        $options = array('results_count' => $resuts_count);

        //$pager_params = array();

        if(isset($form_state['input']['institution']) && $form_state['input']['institution'] > 0){
            $options['institution'] = array($form_state['input']['institution']);
            //$pager_params['institution'] = $form_state['input']['institution'];
        }else if(isset($_GET['institution']) && is_numeric($_GET['institution'])){
            $options['institution'] = array($_GET['institution']);
        }

        if(isset($form_state['input']['country']) && $form_state['input']['country'] > 0){
            $options['country'] = array($form_state['input']['country']);
            //$pager_params['country'] = $form_state['input']['country'];
        }else if(isset($_GET['country']) && is_numeric($_GET['country'])){
            $options['country'] = array($_GET['country']);
        }

        if(isset($_GET['page']) && is_numeric($_GET['page'])){
            $options['page'] = $_GET['page'];
        }

        if(isset($options['institution']) || isset($options['country'])){

            $results = eddy_services_get_listings($options, 'GetPrograms');

            if(isset($results->GetProgramsResult->ProgramList)){
            
                $header = array(
                  t('Provider Name'),
                  t('Program Name'), 
                  t('Program Type'),
                  t('Program Country'),
                  t('Program City'),
                  t('Write a Review'),
                );

                $program_types = sab_reviews_get_program_types();

                $rows = array();
                foreach($results->GetProgramsResult->ProgramList as $program){
                
                    $rows[] = array(
                        'provider_name' => $program->InstitutionName, 
                        'program_name' => $program->ProgramName, 
                        'program_type' => (isset($program_types[$program->ProgramType]->name)) ? $program_types[$program->ProgramType]->name : "Unknown",
                        'program_country' => $program->CampusCountryName,
                        'program_city' => $program->CampusCity,
                        'write_review' => l("Write Review", "admin/reviews/add/program/$program->ProgramId"),
                    );
                
                }

                pager_default_initialize($results->GetProgramsResult->ResultCount, $resuts_count); //Pager loses State

                $markup = "<h4>Choose your program from the list below to write a review.</h4>";
                $markup .= l('Change Selection', 'reviews', array('attributes' => array('class' => array('btn btn-primary form-submit'))));
                $markup = str_replace('active', '', $markup);
                $markup .= theme('table', array('header' => $header, 'rows' => $rows));
                $markup .= theme('pager');
                //$markup .= theme('pager', array('parameters' => $pager_params));

                $form['results'] = array(
                    '#type' => 'item',
                    '#markup' => $markup,
                );

            }
            else{

                drupal_set_message("Sorry but there are no results in your search query.", 'warning');

            }
            
        }else{

            drupal_set_message("Please make a selection.", 'warning');
            
        }

    }else{

        $form['#method'] = 'get';
        $form['#action'] = url('reviews');

        $form['disclaimer'] = array(
            '#type' => 'item',
            '#markup' => t('<p>Thank you for taking the time to review your study abroad experience. Please use the form below to filter down to your specific program, then click "write a review" to submit your thoughts</p>'),
        );


        $selected = isset($form_state['values']['country']) ? $form_state['values']['country'] : 0;

        $form['country'] = array(
            '#type' => 'select',
            //'#title' => t('Country'),
            '#options' => sab_reviews_get_country_options(),
            '#default_value' => $selected,
            '#ajax' => array(
                'callback' => 'sab_reviews_get_institutions',
                'wrapper' => 'sab-institutions',
            ),
        );

        $form['institution'] = array(
            '#type' => 'select',
            //'#title' => t('Provider'),
            '#prefix' => '<div id="sab-institutions">',
            '#suffix' => '</div>',
            '#disabled' => 'disabled',
            '#options' => sab_reviews_get_institutuion_options($form_state),
        );

        $form['search_programs_disabled'] = array(
          '#type' => 'submit',
          '#value' => t('Search Programs'),
          '#disabled' => 'disabled',
          '#states' => array(
              'visible' => array(
                ':input[name="institution"]' => array('value' => '0'),
              ),
            ),
        );

        $form['search_programs'] = array(
          '#type' => 'submit',
          '#value' => t('Search Programs'),
          '#states' => array(
              'visible' => array(
                ':input[name="institution"]' => array('!value' => '0'),
              ),
            ),
        );

        if(count($form['institution']['#options']) > 1){
            $form['institution']['#disabled'] = '';
        }
   
   }

    return $form;

}

/**
 * AJAX Callback function for Institution field.
 */
function sab_reviews_get_institutions($form, $form_state) {

    return $form['institution'];
    
}



/**
 * Returns Country Options from IS.
 */
function sab_reviews_get_country_options(){

    $options = array();

    $results = eddy_services_get_listings(array(), 'GetFacetedNavigation');

    if(isset($results->GetFacetedNavigationResult->Countries)){
        
        foreach($results->GetFacetedNavigationResult->Countries as $k => $v){

            $options[$v->CountryId] = $v->CountryName;
            
        }

    }

    asort($options);

    $options = array('0' => 'Program Country') + $options;

    return $options;

}


/**
 * Returns Institution Options from IS.
 */
function sab_reviews_get_institutuion_options(&$form_state){

    $options = array(0 => 'Program Provider');

    if(isset($form_state['input']['country'])){

        $results = eddy_services_get_listings(
            array(
                'nested_results_count' => 1, 
                'country' => array($form_state['input']['country'])
            ), 'GetInstitutions');

        if(isset($results->GetInstitutionsResult->InstitutionList) && $results->GetInstitutionsResult->ResultCount > 0){

            foreach($results->GetInstitutionsResult->InstitutionList as $v){
                
                $options[$v->InstitutionId] =  $v->InstitutionName;
                
            }

            asort($options);

            $options = array(0 => 'Program Provider') + $options;

            //$options = array_merge(array(0 => 'Select a Provider'), $options);

        }else{
        
            $options = array(0 => 'Sorry, no Providers match your selection.');

        }

    }

    return $options;

}


/**
 * Returns all the program types indexed by External ID.
 */
function sab_reviews_get_program_types(){

    $output = array();
    
    try{
        
        $query = db_select('taxonomy_term_data', 't');
        $query->join('field_data_field_external_id', 'e', 'e.entity_id = t.tid and e.entity_type = \'taxonomy_term\'');
        $query->fields('t', array('name'));
        $query->fields('e', array('field_external_id_value'));
        $query->condition('t.vid', 24);
        $result = $query->execute()->fetchAllAssoc('field_external_id_value');
        
        if(!empty($result))
            $output = $result;
        
    }
    catch(Exception $e){
        
        dpm($e);
        
    }
    
    return $output;

}